@using Client.Components.Ui.Form
@using Domain.Entities

<FormField>
    <FormLabel for="@Component.Id">@Component.Label</FormLabel>

    @if (Component is TextInput textInput)
    {
        <FormInputText
            id="@Component.Id" @bind-Value="@textInput.TextValue"
            type="@textInput.InputType" placeholder="@textInput.Placeholder" required="@textInput.Required"
            pattern="@textInput.Pattern"/>
        <FormInvalidFeedback For="@(() => textInput.TextValue)"/>
    }

    @if (Component is NumberInput numberInput)
    {
        <InputNumber
            TValue="float"
            class="@FormInputText.BaseClass"
            id="@Component.Id" @bind-Value="@numberInput.SelectedNumericValue"
            min="@numberInput.Min" max="@numberInput.Max" step="@numberInput.Step" required="@numberInput.Required"/>
        <FormInvalidFeedback For="@(() => numberInput.SelectedNumericValue)"/>
    }

    @if (Component is SelectInput selectInput)
    {
        <InputSelect id="@Component.Id" @bind-Value="@selectInput.SelectedOption" class="@FormInputText.BaseClass">
            @foreach (var value in selectInput.Choices)
            {
                <option value="@value">@value</option>
            }
        </InputSelect>
        <FormInvalidFeedback For="@(() => selectInput.SelectedOption)"/>
    }

    @if (Component is CheckboxInput checkboxInput)
    {
        <Switch id="@Component.Id" @bind-Value="@checkboxInput.Checked"/>
        <FormInvalidFeedback For="@(() => checkboxInput.Checked)"/>
    }

    @if (Component is DateInput dateInput)
    {
        <InputDate id="@Component.Id" @bind-Value="@dateInput.SelectedDate" class="@FormInputText.BaseClass"
                   min="@(dateInput.DateMin?.ToString("yyyy-mm-dd"))" max="@(dateInput.DateMax?.ToString("yyyy-mm-dd"))" />
        <FormInvalidFeedback For="@(() => dateInput.SelectedDate)"/>
    }

    @if (Component is ButtonComponentChoice button)
    {
        <Button id="@Component.Id" Variant="default" type="@button.ButtonType">
            @button.ButtonText
        </Button>
    }

    @if (!string.IsNullOrWhiteSpace(Component.Description))
    {
        <FormDescription>@Component.Description</FormDescription>
    }
</FormField>

@code {
    [Parameter, EditorRequired]
    public BaseComponentChoice Component { get; set; } = null!;
}